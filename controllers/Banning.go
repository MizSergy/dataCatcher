package controllers

import (
	"fmt"
	"redisCatcher/db"
	"redisCatcher/models"
	"strconv"
	"time"
)

func Ban(){
	listArray := []int{
		4130,
		4668,
		6306,
		8509,
		8619,
		8641,
		8647,
		8649,
		8651,
		8653,
		8655,
		8657,
		8659,
		8661,
		8663,
		8665,
		8667,
		8669,
		8671,
		8673,
		8675,
		8677,
		8679,
		8681,
		8683,
		8685,
		8687,
		8689,
		8691,
		8693,
		8695,
		8697,
		8699,
		8701,
		8703,
		8705,
		8707,
		8709,
		8711,
		8713,
		8715,
		8717,
		8719,
		8721,
		8723,
		8725,
		8727,
		8729,
		8731,
		8733,
		8735,
		8737,
		8739,
		8741,
		8743,
		8745,
		8747,
		8749,
		8751,
		8753,
		8755,
		8757,
		8759,
		8761,
		8763,
		8765,
		8767,
		8769,
		8771,
		8773,
		8775,
		8777,
		8779,
		8781,
		8783,
		8785,
		8787,
		8789,
		8791,
		8793,
		8795,
		8797,
		8799,
		8801,
		8803,
		8805,
		8807,
		8809,
		8811,
		8813,
		8815,
		8817,
		8819,
		8821,
		8823,
		8825,
		8831,
		9352,
		9354,
		9356,
		9358,
		9360,
		9362,
		9364,
		9366,
		9368,
		9370,
		9372,
		9374,
		9376,
		9378,
		9380,
		9382,
		9384,
		9386,
		9388,
		9390,
		9392,
		9394,
		9396,
		9398,
		9400,
		9402,
		9404,
		9406,
		9408,
		9410,
		9412,
		9414,
		9504,
		9506,
		9508,
		9510,
		9512,
		9514,
		9516,
		9518,
		9520,
		9522,
		9524,
		9526,
		9528,
		9530,
		9532,
		9534,
		9536,
		9538,
		9540,
		9542,
		9544,
		9546,
		9548,
		9550,
		9552,
		9554,
		9556,
		9558,
		9560,
		9562,
		9564,
		9566,
		9568,
		9570,
		9572,
		9574,
		9576,
		9578,
		9580,
		9582,
		9584,
		9586,
		9588,
		9590,
		9592,
		9594,
		9596,
		9598,
		9600,
		9602,
		9604,
		9606,
		9608,
		9610,
		9612,
		9614,
		9616,
		9618,
		9620,
		9622,
		9624,
		9626,
		9658,
		9748,
		9750,
		9752,
		9754,
		9756,
		9758,
		9760,
		9762,
		9764,
		9766,
		9768,
		9770,
		9772,
		9774,
		9776,
		9778,
		9780,
		9782,
		9784,
		9786,
		9788,
		9790,
		9792,
		9794,
		9796,
		9798,
		9800,
		9802,
		9804,
		9806,
		9808,
		9810,
		9812,
		9814,
		9816,
		9818,
		9820,
		9838,
		9840,
		9842,
		9844,
		9846,
		9848,
		9850,
		9852,
		9854,
		9856,
		9858,
		9860,
		9936,
		9938,
		9940,
		9942,
		9944,
		9946,
		9948,
		9950,
		9952,
		9954,
		9956,
		9958,
		9960,
		9962,
		9964,
		9966,
		9968,
		9970,
		9972,
		9974,
		9976,
		9978,
		9980,
		9982,
		9984,
		9986,
		9988,
		9990,
		9992,
		9994,
		9996,
		9998,
		10000,
		10002,
		10004,
		10006,
		10008,
		10010,
		10012,
		10014,
		10016,
		10018,
		10020,
		10022,
		10024,
		10026,
		10028,
		10212,
		10214,
		10216,
		10218,
		10220,
		10222,
		10224,
		10226,
		10228,
		10230,
		10232,
		10234,
		10236,
		10238,
		10240,
		10242,
		10244,
		10246,
		10248,
		10250,
		10252,
		10254,
		10256,
		10258,
		10260,
		10262,
		10264,
		10266,
		10268,
		10270,
		10272,
		10274,
		10308,
		10310,
		10312,
		10314,
		10316,
		10318,
		10320,
		10322,
		10324,
		10326,
		10328,
		10330,
		10332,
		10351,
		10352,
		10353,
		10354,
		10355,
		10356,
		10357,
		10469,
		10470,
		10471,
		10472,
		10473,
		10474,
		10475,
		10476,
		10477,
		10478,
		10479,
		10480,
		10481,
		10482,
		10483,
		10484,
		10485,
		10486,
		10487,
		10488,
		10489,
		10490,
		10491,
		10492,
		10493,
		10494,
		10495,
		10496,
		10497,
		10498,
		10499,
		10500,
		10501,
		10502,
		10503,
		10504,
		10505,
		10506,
		10507,
		10508,
		10509,
		10510,
		10511,
		10512,
		10578,
		10579,
		10580,
		10581,
		10582,
		10583,
		10584,
		10593}

	var model_array []models.BlackLists

	for i := 0; i < len(listArray); i++ {
		model := models.BlackLists{
			Site : strconv.Itoa(listArray[i]),
			SourceID : 2,
			CompanyID : 1,
			Ban : 1,
		}
		model.Version = 1
		model.CreateAt = time.Now()
		model_array = append(model_array, model)
	}
	query := `
					INSERT INTO tracker_db.blacklists
						(site,
						source_id,
						campaign,
						version,
						ban)
					VALUES (?, ?, ?, ?)`

	clickhouse := database.SqlxConnect()

	tx, err := clickhouse.Begin()

	ErrorCheck(err)

	stmt, err := tx.Prepare(query)
	ErrorCheck(err)
	for _, item := range model_array {
		if _, err := stmt.Exec(
			item.Site,
			item.SourceID,
			item.CompanyID,
			item.Version,
			item.Ban,
		); err != nil {
			fmt.Println(err.Error())
		}

	}
	if err := tx.Commit(); err != nil {
		fmt.Println(err.Error())
	}
	stmt.Close()
	clickhouse.Close()
	fmt.Println("Всё")

}


func ErrorCheck(err error) {
	if err != nil {
		fmt.Println(err.Error())
	}
}
